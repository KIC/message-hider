name: Test and Build Executables

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install ffmpeg
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          pytest src/

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    env:
      MAIN_PY_FILE: "main.py"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install ffmpeg
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Install Chocolatey and dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          choco install ffmpeg -y
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Install Homebrew and dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> $HOME/.zprofile
          eval "$(/opt/homebrew/bin/brew shellenv)"
          brew install ffmpeg
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          pyinstaller src/app/${{ env.MAIN_PY_FILE }} --onefile -n hider
          ls -l dist/  # Verify build output

      - name: Upload artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-executables
          path: dist/hider.exe

      - name: Upload artifact (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-executables
          path: dist/hider

      - name: Upload artifact (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-executables
          path: dist/hider

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Windows executable
        uses: actions/download-artifact@v4
        with:
          name: windows-executables
          path: windows-executable

      - name: Download Linux executable
        uses: actions/download-artifact@v4
        with:
          name: linux-executables
          path: linux-executable

      - name: Download macOS executable
        uses: actions/download-artifact@v4
        with:
          name: macos-executables
          path: macos-executable

      - name: Verify artifacts
        run: |
          ls -l windows-executable/
          ls -l linux-executable/
          ls -l macos-executable/

      - name: Create release
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: Automated release created by GitHub Actions
          files: |
            windows-executable/hider.exe
            linux-executable/hider
            macos-executable/hider
